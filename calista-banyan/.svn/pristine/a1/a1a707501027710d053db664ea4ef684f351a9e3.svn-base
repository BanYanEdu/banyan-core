/*****************************************************************
   Copyright 2020 by Hien Nguyen (hiennguyen@inetcloud.vn)

   Licensed under the iNet Solutions Corp.,;
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.inetcloud.vn/licenses

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 *****************************************************************/
package com.inet.calista.global.noteservice;

import java.util.Map;

import javax.inject.Inject;

import org.apache.shiro.util.StringUtils;

import com.inet.calista.global.bo.GlbMetaNoteBO;
import com.inet.calista.global.dataservice.GlbAbstraction;
import com.inet.calista.global.model.GlbMetaNote;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;

/**
 * 
 * MyNoteAbstraction.
 *
 * @author Hien Nguyen
 * @version $Id: MyNoteAbstraction.java Feb 1, 2020 1:38:08 PM $
 *
 * @since 1.0
 */
public abstract class MyNoteAbstraction extends GlbAbstraction 
{
	@Inject
	protected GlbMetaNoteBO noteBO;
	
	/*
	 * (non-Javadoc)
	 * @see com.inet.xportal.module.web.plugin.dataservice.PluginSubfirmAbstraction#service(com.inet.xportal.nosql.web.model.SiteDataModel, com.inet.xportal.nosql.web.model.SubFirmProfile, com.inet.xportal.web.action.AbstractBaseAction, java.util.Map)
	 */
	@Override
	protected final WebDataService service(final SiteDataModel site, 
			final SubFirmProfile firm,
			final AbstractBaseAction action,
			final Map<String, Object> params) throws WebOSBOException 
	{
		GlbMetaNote model = null;
		String noteID = XParamUtils.getString("uuid", params);
		String organId = getOrganId(site, firm);
		String username = action.getPrincipal();
		
		if (StringUtils.hasLength(noteID))
		{
			model = noteBO.loadById(organId, username, noteID);
		}
		else 
		{
			String contextID = XParamUtils.getString("contextID", params);
			String application = XParamUtils.getString("application", params);
			if (StringUtils.hasLength(contextID) && StringUtils.hasLength(application))
			{
				model = noteBO.loadByContext(organId, username, contextID, application);
				if (model == null)
				{
					model = new GlbMetaNote();
					model.setApplication(application);
					model.setContextID(contextID);
				}
			}
		}
		
		if (model == null)
			model = new GlbMetaNote();
		
		model.setOrganId(organId);
		model.setOwner(username);
		
		return service(model, action, params);
	}
	
	/**
	 * 
	 * @param model
	 * @param action
	 * @param params
	 * @return
	 * @throws WebOSBOException
	 */
	protected abstract WebDataService service(final GlbMetaNote model,
			final AbstractBaseAction action,
			final Map<String, Object> params) throws WebOSBOException;
}
