/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */
package com.inet.calista.global.bo;

import java.util.List;

import javax.inject.Inject;
import javax.inject.Named;

import org.apache.shiro.util.StringUtils;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.global.model.GlobalDistrict;
import com.inet.xportal.nosql.web.bf.MagicContentBF;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.util.JSONUtil;
import com.inet.xportal.web.context.ContentContext;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.BeanInitiateInvoke;
import com.inet.xportal.web.util.JSONUtils;
import com.inet.xportal.web.util.ResourceUtil;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

/**
 * 
 * GlobalDistrictBO.
 *
 * @author Hien Nguyen
 * @version $Id: GlobalDistrictBO.java May 20, 2019 2:20:45 PM $
 *
 * @since 1.0
 */
@Named("GlobalDistrictBO")
public class GlobalDistrictBO extends GLNoSqlBo<GlobalDistrict> implements BeanInitiateInvoke {
    /**
     * @param businessFacade
     */
    @Inject
    protected GlobalDistrictBO(@ContentContext(context = CalistaConstant.DB_CONTEXT) MagicContentBF businessFacade) {
        super(businessFacade, "gl_district");
    }

    /**
     * @param cityID
     * @param codes
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<GlobalDistrict> queryByCode(String countryID, 
    		String cityID, 
    		List<String> codes) throws WebOSBOException 
    {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
        		.field("countryID").equal(countryID)
        		.field("cityID").equal(cityID)
        		.field("code").in(codes);
        return query((QueryImpl<JSONDB>) query);
    }

    /**
     * 
     * @param countryID
     * @param cityID
     * @param keyword
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<GlobalDistrict> search(String countryID, 
    		String cityID,
    		String keyword,
    		int offset, int limit) throws WebOSBOException 
    {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
        		.field("countryID").equal(countryID)
        		.field("cityID").equal(cityID);

        if (StringUtils.hasLength(keyword)) 
        {
            query.and(query.or(query.criteria("code").like(keyword),
                    			  query.criteria("name").like(keyword)));
        }
        
        return super.search((QueryImpl<JSONDB>) query, offset, limit);
    }

    /**
     * 
     * @param countryID
     * @param cityID
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<GlobalDistrict> query(String countryID, String cityID) throws WebOSBOException {
    		final Query<JSONDB> query = new QueryImpl<JSONDB>()
    				.field("countryID").equal(countryID)
    				.field("cityID").equal(cityID);
    		return query((QueryImpl<JSONDB>) query);
    }

    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.nosql.web.bo.MagicContentBO#add(java.lang.Object)
     */
    @Override
    public String add(GlobalDistrict item) throws WebOSBOException {
    		GlobalDistrict info = loadByCode(item.getCountryID(), item.getCityID(), item.getCode());
    		if (info != null)
    			return info.getUuid();
        return super.add(item);
    }

    /**
     * 
     * @param countryID
     * @param cityID
     * @param code
     * @return
     * @throws WebOSBOException
     */
    public GlobalDistrict loadByCode(String countryID, String cityID, String code) throws WebOSBOException {
    		final Query<JSONDB> query = new QueryImpl<JSONDB>()
    				.field("countryID").equal(countryID)
    				.field("cityID").equal(cityID)
    				.field("code").equal(code);
    		return load((QueryImpl<JSONDB>) query);
    }
    
    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.web.interfaces.BeanInitiateInvoke#init()
     */
    @Override
    public void init() {
        // index data
        ensureIndex("countryID,cityID");
        ensureIndex("countryID,cityID,code");
        ensureIndex("countryID,cityID,name");

        if (count() > 0)
            return;

        logger.debug("init city data from district-data.json file");

        String json = ResourceUtil.getResourceAsString("district-data.json");
        if (StringUtils.hasLength(json)) {
            JSONArray arrJson = ResourceUtil.getJsonAsArray(json);
            if (arrJson.size() > 0) 
            {
                for (int idx = 0; idx < arrJson.size(); idx++)
                {
                    JSONObject jsonItem = (JSONObject) arrJson.get(idx);
                    GlobalDistrict item = JSONUtil.json2Bean(GlobalDistrict.class, jsonItem);

                    if (JSONUtils.hasKey(jsonItem,"country"))
                			item.setCountryID(jsonItem.getString("country"));
                
                    if (JSONUtils.hasKey(jsonItem,"city"))
                    		item.setCityID(jsonItem.getString("city"));

                    if (StringUtils.hasLength(item.getCode()) &&
                    		StringUtils.hasLength(item.getCityID()) &&
                    		StringUtils.hasLength(item.getCountryID()) &&
                    		StringUtils.hasLength(item.getName())) 
                    {
                        logger.debug("add this district {}", item.getName());
                        add(item);
                    }
                }
            }
        }
    }

    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.nosql.web.bo.MagicContentBO#getClassConvetor()
     */
    @Override
    protected Class<GlobalDistrict> getClassConvetor() {
        return GlobalDistrict.class;
    }
}
