/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.service.context;

import com.inet.calista.global.bo.contact.OrganizationInfoBo;
import com.inet.calista.global.dto.GLContext;
import com.inet.calista.global.model.contact.OrganizationInfo;
import com.inet.calista.global.service.GlAbstractService;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalGlobalVariable;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.BeanGlobalVariable;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * com.inet.calista.global.service.context.
 *
 * @author Phong Tran
 * @version $Id: GLContextService.java Nov 12, 2018 15:26 phongtt $
 * @since 1.0
 */
@Named("glorganprofilecontext")
@XPortalGlobalVariable(name = "glCtx")
public class GLContextService extends GlAbstractService implements BeanGlobalVariable {
    @Inject
    private OrganizationInfoBo organizationInfoBo;

    @Override
    protected WebDataService service(final SiteDataModel site, final SubFirmProfile subFirm,
                                     final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
        return new ObjectWebDataservice<>(variable(action));
    }

    @Override
    public Object variable(final AbstractBaseAction action) {
        final Object lgSession = action.getHttpServletRequest().getSession().getAttribute("GLContext");
        if (lgSession == null) {
            logger.debug("global context is creating ...");

            final GLContext glc = new GLContext();
            final OrganizationInfo organ = organizationInfoBo.loadByOrganId(action.getOrganId());
            logger.debug("organId {} will push into global context !...", organ, action.getOrganId());

            if (organ != null) {
                glc.setOrgan(organ);
            } else {
                glc.setOrgan(new OrganizationInfo());
            }

            action.getHttpServletRequest().getSession().setAttribute("GLContext", glc);

            return glc;
        } else {
            return lgSession;
        }
    }
}
