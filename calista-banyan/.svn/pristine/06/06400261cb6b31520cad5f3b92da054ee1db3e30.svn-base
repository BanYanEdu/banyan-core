/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.erp.excel.service;

import com.inet.xportal.nosql.web.bo.SiteBO;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.report.bo.ReportTemplateBO;
import com.inet.xportal.report.dataservice.AbstractReportGenerator;
import com.inet.xportal.report.model.ReportTemplate;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.web.util.XParamUtils;
import org.apache.shiro.util.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.inject.Inject;
import java.util.Map;

/**
 * ERPGeneratorDataservice.
 *
 * @author Phong Tran
 * @version $Id: ERPGeneratorDataservice.java Jan 10, 2014 3:48:48 PM phongtt@inetcloud.vn $
 * @since 1.0
 */
public abstract class ExcelGeneratorAbstraction extends AbstractReportGenerator {
    protected static final Logger logger = LoggerFactory.getLogger(ExcelGeneratorAbstraction.class);
    @Inject
    protected ReportTemplateBO templateBO;
    @Inject
    protected SiteBO siteBO;

    /**
     * @return
     */
    protected abstract String getApplication();

    /**
     * @return
     */
    protected abstract String getModule();

    /**
     * @param siteModel
     * @param action
     * @param params
     * @return
     * @throws WebOSBOException
     */
    protected String getOrganId(final SiteDataModel siteModel,
                                final AbstractBaseAction action,
                                final Map<String, Object> params) throws WebOSBOException {
        return siteModel.getOrganiId();
    }

    /*
     * (non-Javadoc)
     *
     * @see
     * com.inet.xportal.web.interfaces.DataServiceMarker#service(com.inet.xportal
     * .web.action.AbstractBaseAction, java.util.Map)
     */
    @Override
    protected WebDataService service(final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
        String type = XParamUtils.getString("type", params, StringUtils.EMPTY_STRING);
        String name = XParamUtils.getString("name", params, StringUtils.EMPTY_STRING);

        //site,application,module,type,name
        final SiteDataModel siteModel = siteBO.load(action.getSiteID());

        String siteID = siteModel.getUuid();
        String orgID = getOrganId(siteModel, action, params);
        String application = getApplication();
        String module = getModule();

        params.put("orgID", orgID);
        params.put("siteID", siteModel.getUuid());
        logger.debug("orgID {} & siteID {}", orgID, siteID);

        ReportTemplate rpTemp = templateBO.loadByApplication(orgID, application, module, type, name);
        logger.debug("ReportTemplate {} is loaded by {}", rpTemp,
                String.format("site: %s, application: %s, module: %s, type: %s, name: %s",
                        orgID, application, module, type, name)
        );

        params.put("templateID", rpTemp.getUuid());
        params.put("usercode", SecurityUtil.getPrincipal());
        params.put("username", SecurityUtil.getAlias());

        // get site object from this request
        WebDataService rsl = super.service(action, params);

        logger.debug("ERPGeneratorDataservice: {}", rsl);
        return rsl;
    }
}
