package com.inet.jobportal.service.employer.saved_candidate;

import com.inet.jobportal.bo.employer.SavedCandidateBO;
import com.inet.jobportal.model.common.Note;
import com.inet.jobportal.service.JobPortalAbsractService;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * SaveCandidateAddNoteDS.
 *
 * @author Nguyen Duy Tan
 * @version $Id: SaveCandidateAddNoteDS.java Feb 12, 2019 11:50:38 AM nguyen_dv $
 * @since 1.0
 */
@Named("jobportalsavedcandidateaddnote")
@XPortalDataService(roles = {"jobportal_employer_common"}, description = "Employer Common Task")
@XPortalPageRequest(uri = "jobportal/employer/savedcandidate/note/add",
        inherit = true,
        transaction = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class SavedCandidateAddNoteDS extends JobPortalAbsractService {
    @Inject
    private SavedCandidateBO bo;

    @Override
    protected WebDataService service(final SiteDataModel site, final SubFirmProfile firmProfile, final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
        String organId = firmProfile.getOrganiId();
        Note note = action.getModel(Note.class);

        // PENDING: Check organId
        bo.addNote(note.getNoteLinkId(), note);
        return new ObjectWebDataservice<>(note);
    }
}
