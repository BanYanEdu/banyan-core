/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.erp.inventory.model;

import com.inet.calista.erp.common.data.ERPInfoData;
import com.inet.calista.erp.inventory.data.ERPStockMovementItem;
import lombok.Getter;
import lombok.Setter;
import org.apache.shiro.util.CollectionUtils;

import java.util.ArrayList;
import java.util.List;

/**
 * com.inet.xportal.erp.inventory.
 *
 * @author Phong Tran
 * @version $Id: ERPStockMovement.java Aug 13, 2018 13:52 phongtt $
 * @since 1.0
 */
@Getter
@Setter
public class ERPStockMovement<T extends ERPStockMovementItem> extends ERPInfoData {
    private String uuid;

    //info employee
    private String employeeId;
    private String employeeName;

    private String partnerId;
    private String partnerName;

    private String storeInId;
    private String storeOutId;

    private String currencyId;
    private float rate;

    private List<T> items = new ArrayList<>();

    private float totalAmount;
    //totalAmountEx = totalAmount * rate
    private float totalAmountEx;

    private String note;

    /**
     * @return
     */
    public ERPStockMovement calc() {
        float itemAmount = 0;
        if (!CollectionUtils.isEmpty(this.getItems())) {
            for (T item : this.getItems()) {
                itemAmount += item.getAmount();
            }
        }
        this.setTotalAmount(itemAmount);

        //Calculator amount follow exchange rate of currency
        if (this.getRate() < 0) {
            this.setRate(1);
        }

        this.setTotalAmountEx(this.getTotalAmount() * this.getRate());

        return this;
    }
}
