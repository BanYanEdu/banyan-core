/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.ecommerce.service.cms;

import com.inet.calista.ecommerce.ECMConstant;
import com.inet.xportal.cms.web.model.MenuContext;
import com.inet.xportal.cms.web.util.SiteMenuUtil;
import com.inet.xportal.sphere.model.CMSFirm;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;

import javax.inject.Named;
import java.util.Map;

/**
 * CommerceMenuContextUpdateDataservice.
 *
 * @author Phong Tran
 * @version $Id: CommerceMenuContextUpdateDataservice.java Jan 30, 2018 10:53 phongtt $
 * @since 1.0
 */
@Named("commercemenuupdate")
@XPortalDataService(roles = {ECMConstant.ROLE_ADMIN}, description = ECMConstant.ROLE_ADMIN_DESCRIPTION)
@XPortalPageRequest(uri = "commerce/menu/update",
        inherit = true,
        transaction = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class CommerceMenuContextUpdateDataservice extends CommerceMenuContexAbstraction {
    /**
     * @param cmsfirm
     * @param menu
     * @param action
     * @param params
     * @return
     * @throws WebOSBOException
     */
    @Override
    protected WebDataService service(final CMSFirm cmsfirm,
                                     final MenuContext menu,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {
        final MenuContext model = action.getModel(MenuContext.class);
        validated(action, model.getName(), "MENU", "NAME_MISSED", "Name menu is required!");
        validated(action, model.getGroup(), "MENU", "GROUP_MISSED", "Group menu is required!");

        menu.setName(model.getName());
        menu.setGroup(model.getGroup());

        // attribute update
        SiteMenuUtil.attributeUpdate(menu, params);

        menuBO.update(menu.getUuid(), menu);

        return new ObjectWebDataservice<>(menu);
    }
}
