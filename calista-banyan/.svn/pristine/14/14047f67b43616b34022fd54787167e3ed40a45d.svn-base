package com.inet.calista.global.subfirmservice;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.common.utils.ErrorCode;
import com.inet.calista.global.model.GlbReportTemplate;
import com.inet.xportal.document.model.ObjectDocument;
import com.inet.xportal.nosql.web.NoSQLConstant;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.action.FileUploadAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.data.ViolationDTO;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.util.CollectionUtils;

import javax.inject.Named;
import java.util.Map;

/**
 * UpdateService.
 *
 * @author thoangtran
 * @version UpdateService 2019 07-02 15:28
 */
@Named("glexceltemplate_updateservice")
@XPortalDataService(roles = {NoSQLConstant.ROLE_SUBADMIN}, description = CalistaConstant.ROLE_SUB_ADMIN_DESC)
@XPortalPageRequest(uri = "gl/exceltmpl/update",
    inherit = true, transaction = true, action = WebConstant.FILE_UPLOAD_ACTON, result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
@Slf4j
public class ExcelTplUpdateService extends ExcelTplCreateService{

  @Override
  protected WebDataService service(AbstractBaseAction action, Map<String, Object> params) throws WebOSBOException {
    GlbReportTemplate template = action.getModel(GlbReportTemplate.class);
    validator(template, true);
    template.setVersion(XParamUtils.getInteger("version", params, 1));
    GlbReportTemplate exist = templateBo.load(template.getUuid(), template.getOrganId());
    if( null == exist) {
      action.getViolation().add(new ViolationDTO("uuid", ErrorCode.NOT_EXISTS,1,""));
      throw new WebOSBOException("Bad request!");
    }
    FileUploadAction fileUploadAction = (FileUploadAction)action;
    if (CollectionUtils.isEmpty(fileUploadAction.getFileUpload())) {
      // it will update metadata
      template.setMimetype(exist.getMimetype());
      template.setContentUid(exist.getContentUid());
    } else {
      // remove old file
      ObjectDocument objectDocument = this.updateDocument(fileUploadAction, exist.getContentUid());
      template.setContentUid(objectDocument.getUuid());
      template.setMimetype(objectDocument.getMimetype());
    }
    templateBo.update(template.getUuid(), template);
    return new ObjectWebDataservice<>(template);
  }
}
