package com.inet.jobportal.service.candidate.job_app;

import com.inet.jobportal.bo.candidate.JobAppBO;
import com.inet.jobportal.service.JobPortalAbsractService;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.data.IdentityDTO;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.web.util.XParamUtils;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * JobAppDeleteDS.
 *
 * @author Nguyen Duy Tan
 * @version $Id: JobAppDeleteDS.java Jan 10, 2019 11:50:58 AM
 *          nguyen_dv $
 *
 * @since 1.0
 */
@Named("jobportaljobappdelete")
@XPortalDataService(roles = {WebConstant.ROLE_USER}, description = "Job Portal Job App Delete Service")
@XPortalPageRequest(uri = "jobportal/candidate/jobapp/delete",
        transaction = true,
        inherit = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class JobAppDeleteDS extends JobPortalAbsractService {
    @Inject
    private JobAppBO bo;

    @Override
    protected WebDataService service(final SiteDataModel site, final SubFirmProfile firmProfile, final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
        String username = SecurityUtil.getPrincipal();
        String uuid = XParamUtils.getString("uuid", params);

        Query<JSONDB> query = new QueryImpl<JSONDB>();
        query.field("uuid").equal(uuid);
        query.field("username").equal(username);

        if (bo.search(query).getTotal() > 0) {
            if (StringUtils.hasLength(uuid))
                bo.remove(uuid);
            return new ObjectWebDataservice<>(new IdentityDTO(uuid));
        } else {
            // TO BE MODIFIED
            return new ObjectWebDataservice<>(new IdentityDTO(uuid));
        }
    }
}
