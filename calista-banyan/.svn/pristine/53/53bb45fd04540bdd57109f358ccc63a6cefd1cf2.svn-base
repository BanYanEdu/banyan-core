/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.service.organization.profile;

import com.inet.calista.common.CalConstant;
import com.inet.calista.common.utils.CommonUtils;
import com.inet.calista.global.bo.GLBinaryBO;
import com.inet.calista.global.bo.contact.OrganizationInfoBo;
import com.inet.calista.global.model.GLBinary;
import com.inet.calista.global.model.contact.OrganizationInfo;
import com.inet.calista.global.service.GlAbstractService;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.action.FileUploadAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.context.WebContext;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.StringUUID;
import com.inet.xportal.web.util.XParamUtils;
import org.apache.shiro.util.CollectionUtils;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.io.File;
import java.util.Map;

/**
 * com.inet.calista.global.service.organization.profile.
 *
 * @author Phong Tran
 * @version $Id: AvatarProfileService.java Nov 12, 2018 17:15 phongtt $
 * @since 1.0
 */
@Named("glorganprofilelogo")
@XPortalDataService(roles = {CalConstant.ROLE_SUB_ADMIN}, description = CalConstant.ROLE_SUB_ADMIN_DESC)
@XPortalPageRequest(uri = "gl/organ/profile/logo",
        transaction = true,
        inherit = true,
        action = WebConstant.FILE_UPLOAD_ACTON,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class LogoProfileService extends GlAbstractService {

    @Inject
    private OrganizationInfoBo organBO;

    @Override
    protected WebDataService service(final SiteDataModel siteData,
                                     final SubFirmProfile subfirm,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {

        OrganizationInfo info = organBO.loadByOrganId(getOrganId(siteData, subfirm));
        if (info != null) {
            if (XParamUtils.getBoolean("remove", params, false)) {
                info.setLogo(StringUtils.EMPTY_STRING);
                organBO.update(info.getUuid(), info);
            } else {
                FileUploadAction upAction = (FileUploadAction) action;
                if (!CollectionUtils.isEmpty(upAction.getFileUpload())) {
                    for (int idx = 0; idx < upAction.getFileUpload().size(); idx++) {
                        final File file = upAction.getFileUpload().get(idx);
                        logger.debug("File {} is uploading...", file);

                        if (file != null) {
                            String filetype = upAction.getFileType(idx);
                            String filename = StringUUID.uuid(getOrganId(siteData, subfirm)).toString() + ".png";

                            // define this with image type from user view
                            String fieldname = upAction.getFileUploadName().get(idx);

                            final GLBinary glBinary = new GLBinary();
                            glBinary.setCode(StringUUID.uniqueToken());
                            CommonUtils.fileInfoBuilder("LOGO", filename, fieldname, filetype, file, glBinary);

                            WebContext.INSTANCE.cache()
                                    .getBean(GLBinaryBO.class)
                                    .add(file, glBinary);

                            info.setLogo(glBinary.getGridfsUUID());
                            organBO.update(info.getUuid(), info);
                        }
                    }
                }
            }
        } else {
            info = new OrganizationInfo();
        }

        return new ObjectWebDataservice<>(info);
    }
}
