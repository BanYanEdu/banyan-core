/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.ecommerce.service;

import com.inet.calista.ecommerce.ECMConstant;
import com.inet.calista.erp.system.service.ERPCounterAbstraction;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import org.apache.shiro.util.StringUtils;

import javax.inject.Named;
import java.util.Map;

/**
 * ProductCreateService.
 *
 * @author Phong Tran
 * @version $Id: ProductCreateService.java Dec 21, 2016 20:47 phongtt $
 * @since 1.0
 */
@Named("commercecounter")
@XPortalDataService(roles = {ECMConstant.ROLE_USER}, description = ECMConstant.ROLE_USER_DESCRIPTION)
@XPortalPageRequest(uri = "commerce/counter",
        inherit = true,
        transaction = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class CounterService extends ERPCounterAbstraction {

    /**
     * @param siteData
     * @param subFirm
     * @param action
     * @param params
     * @return
     * @throws WebOSBOException
     */
    @Override
    protected WebDataService service(final SiteDataModel siteData,
                                     final SubFirmProfile subFirm,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {
        String counterId = getCounterId(params);

        if (!StringUtils.hasLength(counterId)) {
            return new ObjectWebDataservice<>(counterKeys(siteData, subFirm, action, params));
        }

        return new ObjectWebDataservice<>(counterBuilder(siteData, subFirm, action, params));
    }
}
