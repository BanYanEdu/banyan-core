/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.subfirmservice;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.common.utils.ErrorCode;
import com.inet.calista.global.GlobalConstant;
import com.inet.calista.global.bo.GlbOrganizationBO;
import com.inet.calista.global.data.GlbAddress;
import com.inet.calista.global.dataservice.GlbAbstraction;
import com.inet.calista.global.model.GlbOrganization;
import com.inet.xportal.module.web.api.MngmFactoryManager;
import com.inet.xportal.module.web.model.FirmInformation;
import com.inet.xportal.nosql.web.NoSQLConstant;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.web.util.XParamUtils;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * UpdateService.
 *
 * @author thoangtran
 * @version UpdateService 2018 04-14 11:38
 */
@Named("glorganprofileupdate")
@XPortalDataService(roles = {NoSQLConstant.ROLE_SUBADMIN},
        engage = {"cloudfirmprofileupdate"},
        description = CalistaConstant.ROLE_SUB_ADMIN_DESC)
@XPortalPageRequest(uri = "gl/organ/profile/update",
        transaction = true,
        inherit = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class OrganUpdateService extends GlbAbstraction {
    @Inject
    private GlbOrganizationBO organBO;

    /*
     * (non-Javadoc)
     * @see com.inet.xportal.module.web.plugin.dataservice.PluginSubfirmAbstraction#service(com.inet.xportal.nosql.web.model.SiteDataModel, com.inet.xportal.nosql.web.model.SubFirmProfile, com.inet.xportal.web.action.AbstractBaseAction, java.util.Map)
     */
    @Override
    protected WebDataService service(final SiteDataModel site, final SubFirmProfile profile, final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
        String organId = getOrganId(site, profile);

        GlbOrganization info = organBO.loadByOrganId(organId);
        if (info == null) {
            info = new GlbOrganization();
            info.setOrganId(organId);

            final FirmInformation firm = MngmFactoryManager.INSTANCE
                    .service()
                    .organization(site, organId);

            if (null != firm) {
                //SyncData from lotus
                info.setName(firm.getOrgName());
                info.setModifiedDate(System.currentTimeMillis());
                info.setUuid(organBO.add(info));
            }
        }

        final GlbOrganization organization = action.getModel(GlbOrganization.class);
        organization.setUuid(info.getUuid());
        organization.setOrganId(info.getOrganId());

        String banks = XParamUtils.getString("banks", params, StringUtils.EMPTY_STRING);
        if (!StringUtils.hasLength(banks)) {
            organization.setBanks(info.getBanks());
        }

        if (!StringUtils.hasLength(organization.getName())) {
            putError(action, GlobalConstant.NAME, ErrorCode.MUST_NOT_EMPTY);
            return FAILURE_RESULT;
        }

        organization.setOfficeAddress(GlbAddress.transform(XParamUtils.getString(GlobalConstant.OFFICE_ADDRESS_STR, params, StringUtils.EMPTY_STRING)));
        organization.setModifiedBy(SecurityUtil.getPrincipal());
        organization.setModifiedDate(System.currentTimeMillis());
        organBO.update(info.getUuid(), organization);

        return new ObjectWebDataservice<>(organization);
    }
}
