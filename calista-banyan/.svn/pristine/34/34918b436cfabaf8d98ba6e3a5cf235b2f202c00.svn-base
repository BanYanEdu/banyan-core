/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.subfirmservice;

import com.inet.calista.global.dataservice.GlbAbstraction;
import com.inet.calista.global.model.GlbEmailFirm;
import com.inet.xportal.web.data.ViolationDTO;
import com.inet.xportal.web.exception.WebOSBOException;
import org.apache.shiro.util.StringUtils;

import java.util.List;

/**
 * com.inet.calista.global.subfirmservice.
 *
 * @author Phong Tran
 * @version : EmailAbstraction.java Jul 11, 2019 09:25 phongtt $
 * @since 1.0
 */
public abstract class EmailAbstraction extends GlbAbstraction {
    /**
     * @param template
     * @param lstViolationDTO
     * @return
     * @throws WebOSBOException
     */
    public boolean verifyTemplate(final GlbEmailFirm template,
                                  List<ViolationDTO> lstViolationDTO) throws WebOSBOException {
        boolean isVerify = true;

        if (template == null) {
            lstViolationDTO.add(new ViolationDTO("TEMPLATE", "TEMPLATE_NULL", 0, ""));
            isVerify = false;
        } else {
            if (!StringUtils.hasLength(template.getApplication())) {
                lstViolationDTO.add(new ViolationDTO("TEMPLATE", "TEMPLATE_APPLICATION_MISSED", 0, ""));
                isVerify = false;
            }
            if (!StringUtils.hasLength(template.getOrganId())) {
                lstViolationDTO.add(new ViolationDTO("TEMPLATE", "TEMPLATE_ORGAN_MISSED", 0, ""));
                isVerify = false;
            }
            if (!StringUtils.hasLength(template.getEmailCode())) {
                lstViolationDTO.add(new ViolationDTO("TEMPLATE", "TEMPLATE_CODE_MISSED", 0, ""));
                isVerify = false;
            }
            if (!StringUtils.hasLength(template.getEmailSubject())) {
                lstViolationDTO.add(new ViolationDTO("TEMPLATE", "TEMPLATE_SUBJECT_MISSED", 0, ""));
                isVerify = false;
            }
            if (!StringUtils.hasLength(template.getEmailContent())) {
                lstViolationDTO.add(new ViolationDTO("TEMPLATE", "TEMPLATE_CONTENT_MISSED", 0, ""));
                isVerify = false;
            }
        }

        return isVerify;
    }

}
