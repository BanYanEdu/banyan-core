/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.ecommerce.service.order;

import com.inet.calista.ecommerce.ECMConstant;
import com.inet.calista.ecommerce.bo.ECMOrderBO;
import com.inet.calista.ecommerce.model.ECMOrder;
import com.inet.xportal.sphere.model.CMSFirm;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.data.OrganizationDTO;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * OrderUpdateService.
 *
 * @author Phong Tran
 * @version $Id: OrderUpdateService.java Dec 21, 2016 20:47 phongtt $
 * @since 1.0
 */
@Named("commerceorderupdate")
@XPortalDataService(roles = {ECMConstant.ROLE_ORDER}, description = ECMConstant.ROLE_ORDER_DESCRIPTION)
@XPortalPageRequest(uri = "commerce/order/update",
        inherit = true,
        transaction = true,
        expose = 2,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class OrderUpdateService extends ECMOrderAbstraction {
    @Inject
    private ECMOrderBO orderBO;

    /*
     * (non-Javadoc)
     * @see com.inet.xportal.web.interfaces.DataServiceMarker#service(com.inet.xportal.web.action.AbstractBaseAction, java.util.Map)
     */
    @Override
    protected WebDataService service(final CMSFirm cmsfirm,
                                     final OrganizationDTO orgItem,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {
        String infoCode = XParamUtils.getString("infoCode", params, StringUtils.EMPTY_STRING);
        String organId = orgItem.getOrganId();
        String outletId = StringUtils.EMPTY_STRING;

        final ECMOrder info = invoiceLoad(organId, infoCode);
        if (info == null) {
            logger.error("invoice {} is not found", infoCode);
            action.fieldError("ORDER", "CODE_NOT_FOUND");
        }

        info.setCreateDate(XParamUtils.getLong("createDate", params, info.getCreateDate()));

        info.setCurrencyId(XParamUtils.getString("currencyId", params, info.getCurrencyId()));
        info.setRate(XParamUtils.getFloat("rate", params, info.getRate()));

        info.setEmployeeId(XParamUtils.getString("employeeId", params, info.getEmployeeId()));
        info.setEmployeeName(XParamUtils.getString("employeeName", params, info.getEmployeeName()));

        info.setDiscPercent(XParamUtils.getFloat("discPercent", params, info.getDiscPercent()));
        info.setTotalDiscAmount(XParamUtils.getFloat("totalDiscAmount", params, info.getTotalDiscAmount()));

        info.setVatPercent(XParamUtils.getFloat("vatPercent", params, info.getVatPercent()));
        info.setTotalVATAmount(XParamUtils.getFloat("totalVATAmount", params, info.getTotalVATAmount()));

        info.setTotalPaidAmount(XParamUtils.getFloat("totalPaidAmount", params, info.getTotalPaidAmount()));

        info.setNote(XParamUtils.getString("note", params, info.getNote()));

        info.calc();
        orderBO.update(info.getUuid(), info);

        return new ObjectWebDataservice<>(info);
    }
}
