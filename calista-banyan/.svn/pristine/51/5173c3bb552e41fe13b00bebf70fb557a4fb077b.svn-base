/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.erp.system.api;

import com.inet.calista.erp.common.api.ERPFactoryCounter;
import com.inet.calista.erp.system.bo.ERPCounterBO;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalGlobalVariable;
import com.inet.xportal.web.annotation.XPortalRemoteAnnotation;
import com.inet.xportal.web.interfaces.BeanGlobalVariable;

import javax.inject.Inject;
import javax.inject.Named;

/**
 * com.inet.xportal.erp.bo.
 *
 * @author Phong Tran
 * @version $Id: ERPFactoryBO.java Apr 26, 2018 11:27 phongtt $
 * @since 1.0
 */
@Named("ERPFactoryCounterBO")
@XPortalGlobalVariable(name = "erp-platform-counter")
@XPortalRemoteAnnotation(proxy = ERPFactoryCounter.class, remote = false)
public class ERPFactoryCounterBO implements ERPFactoryCounter, BeanGlobalVariable {

    @Inject
    private ERPCounterBO counterBO;

    @Override
    public Object variable(final AbstractBaseAction action) {
        return null;
    }

    @Override
    public void init(String organId, String counterId, String prefix) {
        counterBO.initCounter(organId, counterId, prefix);
    }

    @Override
    public String builder(String organId, String counterId) {
        return this.builder(organId, counterId, 0);
    }

    @Override
    public String builder(String organId, String counterId, long date) {
        return counterBO.builder(organId, counterId, date);
    }

    @Override
    public void increase(String organId, String counterId) {
        this.increase(organId, counterId, 0);
    }

    @Override
    public void increase(String organId, String counterId, long date) {
        counterBO.increase(organId, counterId, date);
    }
}
