/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.service.contact.personal;

import com.google.common.base.Strings;
import com.inet.calista.common.utils.ErrorCode;
import com.inet.calista.global.GlobalConstant;
import com.inet.calista.global.bo.contact.GLContactBO;
import com.inet.calista.global.exception.GlServiceException;
import com.inet.calista.global.model.GLContact;
import com.inet.calista.global.service.GlAbstractService;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.web.util.XParamUtils;
import lombok.extern.slf4j.Slf4j;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * LoadProfileService.
 *
 * @author thoangtran
 * @version LoadProfileService 2018 07-25 11:25
 */
@Named("glcontactprofileload")
@XPortalDataService(roles = {WebConstant.ROLE_COMMUNITY}, description = "User role")
@XPortalPageRequest(uri = "gl/contact/profile/load",
        transaction = true,
        inherit = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
@Slf4j
public class LoadProfileService extends GlAbstractService {
    @Inject
    private GLContactBO contactInfoBo;

    @Override
    protected WebDataService service(final SiteDataModel site, final SubFirmProfile profile,
                                     final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
        try {
            String user = XParamUtils.getString("username", params, SecurityUtil.getPrincipal());
            if (Strings.isNullOrEmpty(user)) {
                putError(action, GlobalConstant.USERNAME, ErrorCode.USER_NOT_LOGIN);
                return FAILURE_RESULT;
            }

            GLContact contactInfo = null;
            if (SecurityUtil.getPrincipal().equals(user)) {
                contactInfo = contactInfoBo.loadByUserCode(user);
            } else {
                contactInfo = contactInfoBo.loadByUserBase(user);
            }
            logger.debug("found contact {} by user {}", contactInfo, user);

            if (null == contactInfo) {
                contactInfo = new GLContact();
            }
            return new ObjectWebDataservice<>(contactInfo);

        } catch (Exception ex) {
            GlServiceException iex = new GlServiceException("Error occurs during loading contact by identify", ex);

            // log error
            log.error(iex.getMessage(), iex);
            putServiceError(action);

            throw iex;
        }
    }
}
