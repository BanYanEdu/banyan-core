/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.service.contact.profile;

import com.inet.calista.common.CalConstant;
import com.inet.calista.common.bo.CalNotifyBO;
import com.inet.calista.global.bo.GLInvitationBO;
import com.inet.calista.global.bo.contact.ContactInfoBo;
import com.inet.calista.global.bo.contact.OrganizationInfoBo;
import com.inet.calista.global.model.GLInvitation;
import com.inet.calista.global.model.contact.ContactInfo;
import com.inet.calista.global.model.contact.OrganizationInfo;
import com.inet.calista.global.service.GlAbstractService;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.web.util.XParamUtils;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.HashMap;
import java.util.Map;

/**
 * com.inet.calista.global.service.contact.profile.
 *
 * @author Phong Tran
 * @version $Id: InvitationProfileService.java Nov 09, 2018 10:18 phongtt $
 * @since 1.0
 */
@Named("glcontactprofileinvitation")
@XPortalDataService(roles = {CalConstant.ROLE_SUB_ADMIN}, description = CalConstant.ROLE_SUB_ADMIN_DESC)
@XPortalPageRequest(uri = "gl/contact/profile/invitation",
        inherit = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class InviteProfileService extends GlAbstractService {
    @Inject
    private ContactInfoBo contactBO;

    @Inject
    private OrganizationInfoBo organBO;

    @Inject
    private GLInvitationBO inviteBO;

    @Inject
    private CalNotifyBO notifyBO;

    @Override
    protected WebDataService service(final SiteDataModel site,
                                     final SubFirmProfile subFirm,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {
        String organId = getOrganId(site, subFirm);
        String sendBy = SecurityUtil.getPrincipal();
        final ContactInfo contact = contactBO.loadByUserCode(sendBy);

        String emails = XParamUtils.getString("emails", params, StringUtils.EMPTY_STRING);
        if (StringUtils.hasLength(emails)) {
            for (String email : emails.split(";")) {
                if (!inviteBO.checkEmailInvite(sendBy, organId, email)) {
                    final GLInvitation invite = new GLInvitation();
                    invite.setSendBy(contact.getUserCode());
                    invite.setSender(contact.getFullName());
                    invite.setSendDate(System.currentTimeMillis());

                    invite.setOrganId(organId);
                    invite.setCode(inviteBO.genInviteCode());

                    final ContactInfo receiver = contactBO.loadByUserCode(email);
                    if (receiver != null) {
                        invite.setUserCode(email);
                        if (StringUtils.hasLength(receiver.getPrimaryEmail())) {
                            invite.setEmail(receiver.getPrimaryEmail());
                        } else {
                            invite.setEmail(email);
                        }
                        invite.setFirstName(receiver.getFirstName());
                        invite.setMiddleName(receiver.getMiddleName());
                        invite.setLastName(receiver.getLastName());
                    } else {
                        invite.setEmail(email);
                        invite.setFirstName(XParamUtils.getString("firstName", params, StringUtils.EMPTY_STRING));
                        invite.setMiddleName(XParamUtils.getString("middleName", params, StringUtils.EMPTY_STRING));
                        invite.setLastName(XParamUtils.getString("lastName", params, StringUtils.EMPTY_STRING));
                    }
                    inviteBO.add(invite);

                    final Map<String, Object> variables = new HashMap<>();
                    variables.put("invite", invite);

                    final OrganizationInfo organInfo = organBO.loadByOrganId(organId);
                    if (organInfo != null) {
                        variables.put("organ", organInfo);
                    }

                    notifyBO.emailNotify(variables, getOrganId(site, subFirm), "ORGAN_INVITATION", action.getMultilangual(), invite.getEmail());
                }
            }
        } else {
            String phones = XParamUtils.getString("phones", params, StringUtils.EMPTY_STRING);
        }

        return new ObjectWebDataservice<>(inviteBO.queryInvitations(sendBy));
    }
}
