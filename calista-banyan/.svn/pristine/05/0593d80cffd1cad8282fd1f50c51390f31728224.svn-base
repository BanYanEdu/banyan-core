/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.bo.common;

import com.inet.calista.global.bo.GLNoSqlBo;
import com.inet.calista.global.model.common.GlobalRegion;
import com.inet.xportal.nosql.web.bf.MagicContentBF;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.web.context.ContentContext;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.BeanInitiateInvoke;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;

@Named("GlobalRegionBo")
public class GlobalRegionBo extends GLNoSqlBo<GlobalRegion> implements BeanInitiateInvoke {

    @Inject
    public GlobalRegionBo(@ContentContext(context = CONTENT_CONTEXT_NAME) MagicContentBF businessFacade) {
        super(businessFacade, "gl_region");
    }

    @Override
    protected Class<GlobalRegion> getClassConvetor() {
        return GlobalRegion.class;
    }

    @Override
    public void init() {
    }

    @Override
    public String add(GlobalRegion item) throws WebOSBOException {
        return super.add(item, "countryID", "code");
    }


    /**
     * @param countryID
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<GlobalRegion> queryByCountryID(String countryID) throws WebOSBOException {
        if (StringUtils.hasLength(countryID)) {
            final Query<JSONDB> query = new QueryImpl<JSONDB>().field("countryID").equal(countryID);
            return query((QueryImpl<JSONDB>) query);
        }
        return null;
    }
}
