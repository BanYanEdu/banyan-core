/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.ecommerce.service.order;

import com.inet.calista.ecommerce.ECMConstant;
import com.inet.calista.ecommerce.model.ECMOrder;
import com.inet.xportal.sphere.model.CMSFirm;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.data.OrganizationDTO;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;
import org.apache.shiro.util.StringUtils;

import javax.inject.Named;
import java.util.Map;

/**
 * com.inet.xportal.ecommerce.subfrmservice.order.
 *
 * @author Phong Tran
 * @version $Id: OrderCalcService.java Sep 14, 2018 13:46 phongtt $
 * @since 1.0
 */
@Named("commerceordercalc")
@XPortalDataService(roles = {ECMConstant.ROLE_ORDER}, description = ECMConstant.ROLE_ORDER_DESCRIPTION)
@XPortalPageRequest(uri = "commerce/order/calc",
        inherit = true,
        transaction = true,
        expose = 2,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class OrderCalcService extends ECMOrderAbstraction {
    @Override
    protected WebDataService service(final CMSFirm cmsfirm,
                                     final OrganizationDTO orgItem,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {
        String infoCode = XParamUtils.getString("infoCode", params, StringUtils.EMPTY_STRING);
        String organId = orgItem.getOrganId();
        String outletId = StringUtils.EMPTY_STRING;

        final ECMOrder data = action.getModel(ECMOrder.class);

        final ECMOrder info = invoiceLoad(organId, infoCode);
        if (info != null) {
            data.setItems(info.getItems());
        }

        data.calc();

        return new ObjectWebDataservice<>(data);
    }
}
