package com.inet.jobportal.service.candidate.candidate_profile;

import com.inet.jobportal.bo.candidate.CandidateProfileBO;
import com.inet.jobportal.model.candidate.CandidateProfile;
import com.inet.jobportal.service.JobPortalAbsractService;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * CandidateProfileGetDataservice.
 *
 * @author Nguyen Duy Tan
 * @version $Id: CandidateProfileGetDS.java Jan 11, 2019 9:28:01 AM nguyen_dv $
 *
 * @since 1.0
 */
@Named("jobportalcandidateprofileget")
@XPortalDataService(roles = {WebConstant.ROLE_USER}, description="Candidate Profile Get service")
@XPortalPageRequest(uri="jobportal/candidate/profile/get",
        inherit = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class CandidateProfileGetDS extends JobPortalAbsractService {
    @Inject
    private CandidateProfileBO bo;

    @Override
    protected WebDataService service(final SiteDataModel site, final SubFirmProfile firmProfile, final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
//        String organId = firmProfile.getOrganiId();
        String username = SecurityUtil.getPrincipal();

        Query<JSONDB> query = new QueryImpl<JSONDB>();
        query.field("username").equal(username);

        SearchDTO<CandidateProfile> result = bo.search(query);
        if (result == null)
            result = new SearchDTO<>();

        return new ObjectWebDataservice<>(result);
    }
}
