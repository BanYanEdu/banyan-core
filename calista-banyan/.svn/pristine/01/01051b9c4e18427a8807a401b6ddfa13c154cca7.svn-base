/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.pos.common.service.product;

import com.inet.calista.erp.masterdata.bo.ERPItemPropertyBO;
import com.inet.calista.pos.common.POSConstant;
import com.inet.calista.pos.common.bo.POSGroupBO;
import com.inet.calista.pos.common.model.POSGroup;
import com.inet.calista.pos.common.model.POSItem;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * com.inet.platform.pos.service.product.
 *
 * @author Phong Tran
 * @version $Id: BarcodeCreateService.java Jun 08, 2018 14:41 phongtt $
 * @since 1.0
 */
@Named("posproductproperties")
@XPortalDataService(roles = {POSConstant.ROLE_PRODUCT}, description = POSConstant.ROLE_PRODUCT_DESCRIPTION)
@XPortalPageRequest(uri = "pos/product/properties",
        inherit = true,
        transaction = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class ProductPropertyService extends POSProductAbstraction {

    @Inject
    private ERPItemPropertyBO propertyBO;

    @Inject
    private POSGroupBO groupBO;

    @Override
    protected WebDataService service(final SiteDataModel siteData,
                                     final SubFirmProfile subFirm,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {
        String organId = getOrganId(siteData, subFirm);

        String prodId = XParamUtils.getString("prodId", params, StringUtils.EMPTY_STRING);

        final POSItem product = productBO.loadById(organId, prodId);
        logger.debug("found product {} by prodId {}", product, prodId);

        List<String> codes = new ArrayList<>();
        if (product != null) {
            final POSGroup group = groupBO.loadByName(organId, product.getGroup());

            if (group != null) {
                codes = group.getProps();
            }
        }

        return new ObjectWebDataservice<>(propertyBO.properties(organId, StringUtils.EMPTY_STRING, codes));
    }

}
