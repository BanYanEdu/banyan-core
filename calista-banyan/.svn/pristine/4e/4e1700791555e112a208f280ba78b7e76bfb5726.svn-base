/*****************************************************************
   Copyright 2018 by Duyen Tang (tttduyen@inetcloud.vn)

   Licensed under the iNet Solutions Corp.,;
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.inetcloud.vn/licenses

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 *****************************************************************/
package com.inet.calista.collatask.service.conversation;

import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.inject.Inject;
import javax.inject.Named;

import com.google.common.base.Strings;
import com.inet.calista.collatask.bo.task.TaskBO;
import com.inet.calista.collatask.constants.CollaTaskJsonConstants;
import com.inet.calista.collatask.constants.ConversationConstants;
import com.inet.calista.collatask.constants.ReferenceType;
import com.inet.calista.collatask.constants.Roles;
import com.inet.calista.collatask.data.task.Process;
import com.inet.calista.collatask.model.task.Task;
import com.inet.calista.collatask.util.ErrorCode;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;

/**
 * CreateTaskConversationService.
 *
 * @author Duyen Tang
 * @version $Id: CreateTaskConversationService.java Apr 12, 2018 9:50:59 AM
 *          tttduyen $
 *
 * @since 1.0
 */
@Named("colla_conversation_createtaskconversationservice")
@XPortalDataService(roles = { Roles.BIZ_COMMON }, description = "")
@XPortalPageRequest(uri = "colla/conversations/createtaskconv", inherit = true, result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class CreateTaskConversationService extends CreateConversationService {
	@Inject
	private TaskBO taskBo;

	@Override
	protected WebDataService service(SiteDataModel site, SubFirmProfile subFirm, AbstractBaseAction action,
			Map<String, Object> params) throws WebOSBOException {
		String uuid = XParamUtils.getString(CollaTaskJsonConstants.UUID, params);
		if (Strings.isNullOrEmpty(uuid)) {
			putError(action, CollaTaskJsonConstants.UUID, ErrorCode.must_not_empty);
			return FAILURE_RESULT;
		}

		// load task information
		Task task = taskBo.findByUuid(getOrgCode(site, subFirm), uuid);
		if (task == null) {
			putError(action, CollaTaskJsonConstants.UUID, ErrorCode.invalid);
			return FAILURE_RESULT;
		}

		// send notification
		sendConversation(site.getUuid(), action.getMultilangual(), task.getOrgCode(), task.getCreatorUname(),
				task.getCreatorName(), task.getUuid(), task.getName(), getReceiver(task));

		return SUCCESS_RESULT;
	}

	/**
	 * Return all user who can view this task
	 * 
	 * @param task
	 *            the given task
	 * @return the receivers
	 */
	public List<String> getReceiver(Task task) {
		Set<String> memberUnames = new HashSet<>();

		for (Process process : task.getProcesses()) {
			memberUnames.add(process.getReceiverUname());
		}

		// get all watchers
		if (task.getWatchers() != null) {
			task.getWatchers().forEach(watcher -> memberUnames.add(watcher.getUname()));
		}

		// remove creator
		// memberUnames.remove(task.getCreatorUname());

		return new LinkedList<>(memberUnames);
	}

	@Override
	protected String getRefType() {
		return ReferenceType.task.name();
	}

	@Override
	protected String getConversationCategory() {
		return ConversationConstants.COLLATASK_TASK_CONVERSATION_CATEGORY;
	}

	@Override
	protected String getConversationType() {
		return ConversationConstants.COLLATASK_TASK_CONVERSATION_TYPE;
	}
}
