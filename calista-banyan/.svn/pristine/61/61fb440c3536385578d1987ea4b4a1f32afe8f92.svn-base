package com.inet.calista.global.subfirmservice;

import java.io.File;
import java.util.Map;

import javax.inject.Named;

import org.apache.shiro.util.CollectionUtils;
import org.apache.shiro.util.StringUtils;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.global.model.GlbReportTemplate;
import com.inet.xportal.nosql.web.NoSQLConstant;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.action.FileUploadAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.MimeTypeUtil;
import com.inet.xportal.web.util.XParamUtils;

/**
 * 
 * ExcelTplUpdateService.
 *
 * @author Hien Nguyen
 * @version $Id: ExcelTplUpdateService.java Feb 11, 2020 1:58:20 PM $
 *
 * @since 1.0
 */
@Named("glexceltmplupdate")
@XPortalDataService(roles = { NoSQLConstant.ROLE_SUBADMIN }, description = CalistaConstant.ROLE_SUB_ADMIN_DESC)
@XPortalPageRequest(uri = "gl/exceltmpl/update", 
	inherit = true, 
	transaction = true,
	action = WebConstant.FILE_UPLOAD_ACTON, 
	result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class ExcelTplUpdateService extends ExcelTplAbstraction 
{
	/*
	 * (non-Javadoc)
	 * @see com.inet.calista.global.subfirmservice.ExcelTplAbstraction#service(java.lang.String, com.inet.calista.global.model.GlbReportTemplate, com.inet.xportal.web.action.AbstractBaseAction, java.util.Map)
	 */
	@Override
	protected WebDataService service(String organId, 
			final GlbReportTemplate template, 
			final AbstractBaseAction action,
			Map<String, Object> params) throws WebOSBOException 
	{
		// only update firm owner
		if (template.getOrganId().equals(organId))
		{
			template.setVersion(XParamUtils.getInteger("version", params, template.getVersion()));
			
			// name update
			String name = XParamUtils.getString("name", params);
			if (StringUtils.hasLength(name) && !templateBo.exists(organId, name, template))
			{
				template.setName(name);
			}
			
			String description = XParamUtils.getString("description", params);
			if (StringUtils.hasLength(description))
				template.setDescription(description);
			
			final FileUploadAction uplAction = (FileUploadAction) action;
			if (!CollectionUtils.isEmpty(uplAction.getFileUpload())) 
			{
				if (StringUtils.hasLength(template.getContentUid()))
					templateBo.getDocumentBO().remove(template.getContentUid());
				
				final File file = uplAction.getFileUpload().get(0);
				if (file != null && file.exists() && file.length() > 0)
				{
					template.setMimetype(uplAction.getFileType(0));
					template.setExtension(MimeTypeUtil.getExtentionByMimeType(template.getMimetype()));
					template.setContentUid(templateBo.getDocumentBO().saveFile(file, template.getMimetype()));
				}
			}
			
			templateBo.update(template.getUuid(), template);
		}
		
		return new ObjectWebDataservice<>(template);
	}
}
