/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */
package com.inet.calista.ecommerce.service.common;

import com.inet.calista.ecommerce.model.ECMItem;
import com.inet.calista.ecommerce.utils.ECMUtil;
import com.inet.calista.erp.common.data.ERPItemStatus;
import com.inet.xportal.cms.web.model.CMSItemModel;
import com.inet.xportal.cms.web.util.SiteMenuUtil;
import com.inet.xportal.nosql.web.data.PairValueDTO;
import com.inet.xportal.sphere.model.CMSFirm;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.data.OrganizationDTO;
import com.inet.xportal.web.data.ViolationDTO;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;
import org.apache.shiro.util.CollectionUtils;
import org.apache.shiro.util.StringUtils;

import javax.inject.Named;
import java.util.Map;

/**
 * ProductTabLoadDataservice.
 *
 * @author Hien Nguyen
 * @version $Id: ProductTabLoadDataservice.java Dec 12, 2017 11:55:09 AM $
 * @since 1.0
 */
@Named(value = "ECMItemtabload")
@XPortalDataService(description = "Product Tag service")
@XPortalPageRequest(uri = "commerce/product/tabload",
        inherit = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class ProductTabLoadDataservice extends ProductContentBase {
    /**
     * @return
     */
    @Override
    protected String statusLoad() {
        return ERPItemStatus.USED.name();
    }

    /*
     * (non-Javadoc)
     * @see com.inet.xportal.ecommerce.cmsservice.ProductContentBase#service(com.inet.xportal.sphere.model.CMSFirm, com.inet.xportal.web.data.OrganizationDTO, com.inet.xportal.ecommerce.model.ECMItem, com.inet.xportal.web.action.AbstractBaseAction, java.util.Map)
     */
    @Override
    protected final WebDataService service(final CMSFirm cmsfirm,
                                           final OrganizationDTO orgItem,
                                           final ECMItem summary,
                                           final AbstractBaseAction action,
                                           final Map<String, Object> params) throws WebOSBOException {
        String cmsItemID = XParamUtils.getString(SiteMenuUtil.CMS_ITEM_ID, params);
        if (!StringUtils.hasLength(cmsItemID)) {
            logger.error("CMSItem ID is required.");

            action.getViolation().add(new ViolationDTO("CMSTEM_ID", "CMSTEM_ID", 1, "CMSTEM_ID_MISSED"));
            throw new WebOSBOException("Bad request!");
        }

        // adjust value from tab-group
        ECMUtil.tabgroupAdjustment(action.getSiteID(),
                getCMSPrefix(cmsfirm),
                getLanguage(action, params),
                summary.getCmsTab(),
                true);

        if (CollectionUtils.isEmpty(summary.getCmsTab().getElements())) {
            logger.error("There is no menu context for {} product.", summary.getName());
            action.getViolation().add(new ViolationDTO("MENU_CONTEXT", "MENU_CONTEXT", 1, "MENU_CONTEXT_EMPTY"));
            throw new WebOSBOException("Bad request!");
        }

        // load menu context data
        for (PairValueDTO menu : summary.getCmsTab().getElements()) {
            if (cmsItemID.equals(menu.getUuid())) {
                CMSItemModel cmsItem = getCmsItemBO().loadByOwner(cmsItemID,
                        action.getSiteID(),
                        getCMSPrefix(cmsfirm),
                        getOwnerId(orgItem));

                if (cmsItem == null)
                    cmsItem = new CMSItemModel();
                return new ObjectWebDataservice<>(cmsItem);
            }
        }

        return new ObjectWebDataservice<>(new CMSItemModel());
    }
}
