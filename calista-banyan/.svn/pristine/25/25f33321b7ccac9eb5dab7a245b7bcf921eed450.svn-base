/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.ecommerce.service.product;

import com.inet.calista.ecommerce.ECMConstant;
import com.inet.calista.ecommerce.model.ECMItem;
import com.inet.calista.ecommerce.service.common.ProductContentBase;
import com.inet.calista.erp.common.data.ERPItemStatus;
import com.inet.xportal.sphere.model.CMSFirm;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.action.FileUploadAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.data.OrganizationDTO;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import org.apache.shiro.util.StringUtils;

import javax.inject.Named;
import java.util.Map;

/**
 * ProductCreateService.
 *
 * @author Phong Tran
 * @version $Id: ProductCreateService.java Dec 21, 2016 20:47 phongtt $
 * @since 1.0
 */
@Named("commerceproductcreate")
@XPortalDataService(roles = {ECMConstant.ROLE_PRODUCT}, description = ECMConstant.ROLE_PRODUCT_DESCRIPTION)
@XPortalPageRequest(uri = "commerce/product/create",
        inherit = true,
        transaction = true,
        action = WebConstant.FILE_UPLOAD_ACTON,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class ProductCreateService extends ProductContentBase {

    /**
     * @param cmsfirm
     * @param orgItem
     * @param action
     * @param params
     * @return
     * @throws WebOSBOException
     */
    @Override
    protected ECMItem productLoad(final CMSFirm cmsfirm,
                                  final OrganizationDTO orgItem,
                                  final AbstractBaseAction action,
                                  final Map<String, Object> params) throws WebOSBOException {
        final ECMItem summary = action.getModel(ECMItem.class);

        // name is required
        if (!StringUtils.hasLength(summary.getName())) {
            logger.error("Application Name is required.");
            action.fieldError("APPLICATION_NAME", "APPLICATION_NAME_MISSED");
        }

        /*
        // tab group verification
        if (StringUtils.hasLength(summary.getTabgroup())) {
            tabgroupVerify(cmsfirm, summary, action, params);

            // element update
            TabBaseUtil.ElementUpdate(cmsfirm, summary, action, params);
        }
        */

        summary.setOrganId(getOwnerId(orgItem));

        // status default is REVIEW (waiting)
        if (!StringUtils.hasLength(summary.getStatus()))
            summary.setStatus(ERPItemStatus.USED.name());

        return summary;
    }

    /*
     * (non-Javadoc)
     * @see com.inet.xportal.ecommerce.cmsservice.ProductContentBase#service(com.inet.xportal.sphere.model.CMSFirm, com.inet.xportal.web.data.OrganizationDTO, com.inet.xportal.ecommerce.model.ECMItem, com.inet.xportal.web.action.AbstractBaseAction, java.util.Map)
     */
    @Override
    protected WebDataService service(final CMSFirm cmsfirm,
                                     final OrganizationDTO orgItem,
                                     final ECMItem product,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {
        String outletId = StringUtils.EMPTY_STRING;

        product.setCode(productBO.counterGenerate(
                orgItem.getOrganId(), outletId,
                productBO.getCounter(), product.getCode())
        );

        if (!StringUtils.hasLength(product.getCode())) {
            logger.error("product {} is exists.", product.getCode());
            action.fieldError("PRODUCT", "PRODUCT_CODE_EXISTS");
        }

        product.setUuid(productBO.add(product));

        propertiesBuilder(product, params);

        imagesBuilder(cmsfirm, product, (FileUploadAction) action, params);

        productBO.update(product.getUuid(), product);

        return new ObjectWebDataservice<>(product);
    }
}
