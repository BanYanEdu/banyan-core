package com.inet.calista.global.service.contact;

import com.google.common.base.Strings;
import com.inet.calista.common.utils.DateUtils;
import com.inet.calista.common.utils.ErrorCode;
import com.inet.calista.common.utils.JsonUtils;
import com.inet.calista.global.bo.contact.ContactInfoBo;
import com.inet.calista.global.constant.CommonConstant;
import com.inet.calista.global.exception.GlServiceException;
import com.inet.calista.global.model.common.Address;
import com.inet.calista.global.model.contact.ContactInfo;
import com.inet.calista.global.service.GlAbstractService;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.web.util.XParamUtils;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import java.util.Map;

/**
 * SaveService.
 *
 * @author thoangtran
 * @version SaveService 2018 04-14 09:57
 */
@Slf4j
public class SaveService extends GlAbstractService {
  @Inject
  private ContactInfoBo contactInfoBo;
  @Override
  protected WebDataService service(final SiteDataModel site, final SubFirmProfile firmProfile, final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
    try{
      ContactInfo contact = action.getModel(ContactInfo.class);
      if(Strings.isNullOrEmpty(contact.getLastName())){
        putError(action, CommonConstant.LAST_NAME, ErrorCode.MUST_NOT_EMPTY);
        return FAILURE_RESULT;
      }
      // get address
      if(params.containsKey(CommonConstant.ADDRESS_STR)){
        contact.setAddress(Address.transform(JsonUtils.toJsonObject(XParamUtils.getString(CommonConstant.ADDRESS_STR, params))));
      }

      contact.setOwnerId(firmProfile.getOrganiId());
      contact.setUuid(StringUtils.EMPTY_STRING);
      contact.setCreatedBy(SecurityUtil.getPrincipal());
      contact.setCreatedDate(DateUtils.now().getTime());
      return new ObjectWebDataservice<>(contactInfoBo.saveOrUpdate(contact));
    } catch (Exception ex) {
      GlServiceException iex = new GlServiceException("Error occurs during saving contact", ex);

      // log error
      log.error(iex.getMessage(), iex);
      putServiceError(action);

      throw iex;
    }
  }
}
