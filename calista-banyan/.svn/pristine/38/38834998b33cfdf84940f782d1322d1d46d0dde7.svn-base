/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.dataservice;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.global.bo.GlbOrganizationBO;
import com.inet.calista.global.model.GlbOrganization;
import com.inet.xportal.module.web.api.MngmFactoryManager;
import com.inet.xportal.module.web.model.FirmInformation;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;
import net.sf.json.JSONObject;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * com.inet.calista.global.service.organization.profile.
 *
 * @author Phong Tran
 * @version $Id: VerifyProfileService.java Nov 12, 2018 14:49 phongtt $
 * @since 1.0
 */
@Named("glorganprofileverify")
@XPortalDataService(description = CalistaConstant.ROLE_COMMUNITY_DESC)
@XPortalPageRequest(uri = "gl/organ/profile/verify",
        transaction = true,
        inherit = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class OrganVerifyService extends GlbAbstraction {
    @Inject
    private GlbOrganizationBO organBO;

    @Override
    protected WebDataService service(final SiteDataModel site, final SubFirmProfile profile,
                                     final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
        GlbOrganization info = null;

        String uriPrefix = XParamUtils.getString("uriPrefix", params, StringUtils.EMPTY_STRING);
        if (StringUtils.hasLength(uriPrefix)) {
            final FirmInformation firm = MngmFactoryManager.INSTANCE
                    .service()
                    .orgByPrefix(site, uriPrefix, StringUtils.EMPTY_STRING);
            logger.debug("found firm {} by prefix {}", firm, uriPrefix);

            if (firm != null && StringUtils.hasLength(firm.getOrganId())) {
                info = organBO.loadByOrganId(firm.getOrganId());

                if (info == null) {
                    //SyncData from lotus
                    info = new GlbOrganization();
                    info.setOrganId(firm.getOrganId());
                    info.setName(firm.getOrgName());
                    info.setCreatedDate(System.currentTimeMillis());
                    info.setModifiedDate(System.currentTimeMillis());
                    info.setUuid(organBO.add(info));
                }
            }
        }

        String taxCode = XParamUtils.getString("taxCode", params, StringUtils.EMPTY_STRING);
        if (info == null && StringUtils.hasLength(taxCode)) {
            info = organBO.loadByTaxCode(taxCode);

            if (info == null) {
                String country = XParamUtils.getString("country", params, action.getCountry());

                logger.debug("Verify by country {}", country);

                if ("VI".equals(country)) {
                    final JSONObject organInfo = organBO.apiTaxCode(taxCode);

                    if (organInfo != null) {
                        return new ObjectWebDataservice<>(organInfo);
                    }
                }
            }
        }

        if (info == null) {
            info = new GlbOrganization();
        }

        return new ObjectWebDataservice<>(info);
    }
}
