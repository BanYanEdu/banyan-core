package com.inet.jobportal.service.candidate.saved_jobpost;

import com.inet.jobportal.bo.candidate.SavedJobPostBO;
import com.inet.jobportal.model.candidate.SavedJobPost;
import com.inet.jobportal.service.JobPortalAbsractService;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.web.util.XParamUtils;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.Map;

/**
 * SavedJobPostSearchDataservice.
 *
 * @author Nguyen Duy Tan
 * @version $Id: SavedJobPostSearchDS.java Jan 10, 2019 9:28:01 AM nguyen_dv $
 *
 * @since 1.0
 */
@Named("jobportalsavedjobpostsearch")
@XPortalDataService(roles = {WebConstant.ROLE_USER}, description="Saved Job Post Search service")
@XPortalPageRequest(uri="jobportal/candidate/savedjobpost/search",
        inherit = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class SavedJobPostSearchDS extends JobPortalAbsractService {
    @Inject
    private SavedJobPostBO bo;

    @Override
    protected WebDataService service(final SiteDataModel site, final SubFirmProfile firmProfile, final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
        String username = SecurityUtil.getPrincipal();
        String jobpostId = XParamUtils.getString("jobpostId", params,"");
        String uuid = XParamUtils.getString("uuid", params,"");

        Query<JSONDB> query = new QueryImpl<JSONDB>();
        query.field("username").equal(username);
        if (!jobpostId.equals("")) { query.field("jobpostId").equal(jobpostId); }
        if (!uuid.equals("")) { query.field("uuid").equal(uuid); }

        SearchDTO<SavedJobPost> result = bo.search(query);
        if (result == null)
            result = new SearchDTO<>();

        return new ObjectWebDataservice<>(result);
    }
}
