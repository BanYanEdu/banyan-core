/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */
package com.inet.calista.global.bo;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.global.model.GlbCurrency;
import com.inet.xportal.nosql.web.bf.MagicContentBF;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.util.JSONUtil;
import com.inet.xportal.web.context.ContentContext;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.BeanInitiateInvoke;
import com.inet.xportal.web.util.ResourceUtil;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.List;

/**
 * GlobalCurrencyBO.
 *
 * @author Hien Nguyen
 * @version $Id: GlobalCurrencyBO.java Aug 20, 2013 3:29:22 PM nguyen_dv $
 * @since 1.0
 */
@Named("GlobalCurrencyBO")
public class GlbCurrencyBO extends GlbNoSqlBO<GlbCurrency> implements BeanInitiateInvoke {

    /**
     * @param businessFacade
     */
    @Inject
    public GlbCurrencyBO(@ContentContext(context = CalistaConstant.DB_CONTEXT) MagicContentBF businessFacade) {
        super(businessFacade, "gl_currency");
    }

    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.nosql.web.bo.MagicContentBO#add(java.lang.Object)
     */
    @Override
    public String add(GlbCurrency info) throws WebOSBOException {
        return super.add(info, "code");
    }

    /**
     * @param code
     * @return
     * @throws WebOSBOException
     */
    public GlbCurrency loadByCode(String code) throws WebOSBOException {
        final Query<JSONDB> query = new QueryImpl<JSONDB>().field("code").equal(code);

        return super.load((QueryImpl<JSONDB>) query);
    }


    /**
     * @param codes
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<GlbCurrency> queryByCode(List<String> codes) throws WebOSBOException {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
                .field("code").in(codes);

        return query((QueryImpl<JSONDB>) query);
    }

    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.web.interfaces.BeanInitiateInvoke#init()
     */
    @Override
    public void init() {
        // index this data from database
        ensureIndex("code");

        if (count() > 0)
            return;

        initCurrency();
    }

    /**
     *
     */
    public void initCurrency() {
        super.remove(new QueryImpl<>());

        logger.debug("init currency data from global-currency.json file");
        String json = ResourceUtil.getResourceAsString("global-currency.json");
        if (StringUtils.hasLength(json)) {
            JSONArray arrJson = ResourceUtil.getJsonAsArray(json);
            if (arrJson.size() > 0) {
                for (int idx = 0; idx < arrJson.size(); idx++) {
                    JSONObject jsonItem = (JSONObject) arrJson.get(idx);
                    GlbCurrency item = JSONUtil.json2Bean(GlbCurrency.class, jsonItem);

                    if (StringUtils.hasLength(item.getCode())
                            && StringUtils.hasLength(item.getName())) {
                        try {
                            item.setUuid(add(item));

                            logger.debug("add currency {} success.", JSONObject.fromObject(item));
                        } catch (Exception e) {
                            logger.error("init currency {} - {} fail.", item.getCode(), item.getName());
                        }
                    }
                }
            }
        }
    }

    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.nosql.web.bo.MagicContentBO#getClassConvetor()
     */
    @Override
    protected Class<GlbCurrency> getClassConvetor() {
        return GlbCurrency.class;
    }

}
