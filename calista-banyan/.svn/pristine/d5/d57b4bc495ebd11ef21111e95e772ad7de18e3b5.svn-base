/*****************************************************************
   Copyright 2017 by Duyen Tang (tttduyen@inetcloud.vn)

   Licensed under the iNet Solutions Corp.,;
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.inetcloud.vn/licenses

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 *****************************************************************/
package com.inet.calista.collatask.service;

import java.util.Map;

import com.inet.calista.collatask.dto.SearchCriteria;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.util.XParamUtils;

/**
 * SearchService.
 *
 * @author Duyen Tang
 * @version $Id: SearchService.java Dec 30, 2017 9:32:20 AM tttduyen $
 *
 * @since 1.0
 */
public abstract class SearchService<T> extends CollabarationTaskService {

  /**
   * Create search criteria instance
   * 
   * @param action the given action
   * @param params the given parameters
   * @return the given criteria
   */
  protected SearchCriteria<T> getCriteria(SiteDataModel site, SubFirmProfile subFirm, 
      AbstractBaseAction action, Map<String, Object> params) {
    SearchCriteria<T> criteria = new SearchCriteria<T>();
    
    criteria.setPageSize(XParamUtils.getInteger("pageSize", params, -1));
    criteria.setPageNumber(XParamUtils.getInteger("pageNumber", params, 0));
    criteria.setUsername(getUsername());
    criteria.setOrgCode(getOrgCode(site, subFirm));
    if (getModelClass() != null) {
      criteria.setCriteria(action.getModel(getModelClass()));
    }
    
    return criteria;
  }
  
  /**
   * Return the model class
   * 
   * @return the model class
   */
  protected abstract Class<T> getModelClass();

}
