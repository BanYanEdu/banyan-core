package com.inet.calista.global.bo.location;

import com.inet.calista.common.utils.CommonUtils;
import com.inet.calista.global.bo.GLNoSqlBo;
import com.inet.calista.global.model.localtion.GlobalWard;
import com.inet.xportal.nosql.web.bf.MagicContentBF;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.web.context.ContentContext;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.BeanInitiateInvoke;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.List;

/**
 * GlobalWardBo
 *
 * @author <a href="mailto:nbccong@inetcloud.vn">Chi Cong Nguyen</a>
 * @version $Id: GlobalWardBo.java Jan 19, 2017 11:39:27 nbccong $
 * @since 1.0
 */
@Named("GlobalWardBo")
public class GlobalWardBo extends GLNoSqlBo<GlobalWard> implements BeanInitiateInvoke {
    /**
     * @param businessFacade
     */
    @Inject
    public GlobalWardBo(@ContentContext(context = CONTENT_CONTEXT_NAME) MagicContentBF businessFacade) {
        super(businessFacade, "gl_ward");
    }

    /**
     * @param districtId
     * @param keywords
     * @param offset
     * @param limit
     * @return
     */
    public SearchDTO<GlobalWard> query(String districtId, String keywords, int offset, int limit) {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
                .field("districtId").equal(districtId);

        if (StringUtils.hasLength(keywords))
            query.and(query.or(query.criteria("name").like(keywords),
                    query.criteria("code").like(keywords)));

        if (offset >= 0)
            query.offset(offset);

        if (limit > 0)
            query.limit(limit);

        return super.query((QueryImpl<JSONDB>) query);
    }

    /**
     * @param districtId
     * @return
     */
    public SearchDTO<GlobalWard> query(String districtId) {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
                .field("districtId").equal(districtId);


        return super.query((QueryImpl<JSONDB>) query);
    }

    /**
     * @param districtID
     * @param name
     * @return
     * @throws WebOSBOException
     */
    public GlobalWard loadByName(String districtID, String name) throws WebOSBOException {
        final Query<JSONDB> query = new QueryImpl<JSONDB>();

        if (StringUtils.hasLength(districtID))
            query.field("districtId").equal(districtID);
        query.field("name").equal(name);

        return load((QueryImpl<JSONDB>) query);
    }

    /**
     * @param districtId
     */
    public void removeByDistrictId(String districtId) {
        final QueryImpl<JSONDB> query = new QueryImpl<>();
        query.field("districtId").equal(districtId);
        remove(query);
    }

    /**
     * @param ids
     */
    public void remove(List<String> ids) {
        final QueryImpl<JSONDB> query = new QueryImpl<>();
        query.field("_id").in(CommonUtils.toObjectIdList(ids));
        this.remove(query);
    }

    /*
     * (non-Javadoc)
     * @see com.inet.xportal.nosql.web.bo.SQLMagicBase#getClassConvetor()
     */
    @Override
    protected Class<GlobalWard> getClassConvetor() {
        return GlobalWard.class;
    }

    /*
     * (non-Javadoc)
     * @see com.inet.xportal.web.interfaces.BeanInitiateInvoke#init()
     */
    @Override
    public void init() {
        ensureIndex("districtId");
        ensureIndex("name");

        ensureIndex("districtId,name");
        ensureIndex("districtId,code");
    }
}
