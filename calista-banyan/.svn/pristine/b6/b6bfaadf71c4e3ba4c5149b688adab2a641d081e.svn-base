/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.erp.common.bo;

import com.inet.calista.erp.common.data.ERPBinaryModel;
import com.inet.calista.erp.masterdata.model.ERPItem;
import com.inet.xportal.nosql.web.bf.MagicContentBF;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.web.context.ContentContext;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;
import net.sf.json.JSONObject;
import org.apache.shiro.util.CollectionUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.inject.Inject;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * com.inet.xportal.erp.bo.
 *
 * @author Phong Tran
 * @version $Id: ERPItemBO.java May 15, 2018 11:55 phongtt $
 * @since 1.0
 */
public abstract class ERPItemBase<T extends ERPItem> extends ERPBaseBO<T> {
    protected static final Logger logger = LoggerFactory.getLogger(ERPItemBase.class);

    // this map will help object convert all children data
    public static Map<String, Class<?>> childrenConvert;

    static {
        childrenConvert = new HashMap<>();
        childrenConvert.put("images", ERPBinaryModel.class);
        childrenConvert.put("properties", JSONObject.class);
    }

    @Inject
    protected ERPItemBase(@ContentContext(context = CONTENT_CONTEXT_NAME) MagicContentBF businessFacade) {
        super(businessFacade, "erp_md_item");
    }

    /**
     * @param organId
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<T> excludeProducts(String organId, final List<String> prodCodes) throws WebOSBOException {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
                .field("organId").equal(organId);

        query.retrievedFields(true, "organId", "code", "name", "unit", "price");

        if (!CollectionUtils.isEmpty(prodCodes)) {
            query.field("code").notIn(prodCodes);
        }

        return super.query((QueryImpl<JSONDB>) query);
    }
}
