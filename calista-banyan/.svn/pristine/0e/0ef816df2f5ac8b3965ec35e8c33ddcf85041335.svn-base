/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.pos.common.service.product;

import com.inet.calista.pos.common.POSConstant;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;

import javax.inject.Named;
import java.util.Map;

/**
 * com.inet.platform.pos.service.product.
 *
 * @author Phong Tran
 * @version $Id: BarcodeRemoveService.java Jun 08, 2018 14:41 phongtt $
 * @since 1.0
 */
@Named("posbarcoderemove")
@XPortalDataService(roles = {POSConstant.ROLE_PRODUCT}, description = POSConstant.ROLE_PRODUCT_DESCRIPTION)
@XPortalPageRequest(uri = "pos/barcode/remove",
        inherit = true,
        transaction = true,
        result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
public class BarcodeRemoveService extends POSProductAbstraction {

    //@Inject
    //private POSBarcodeBO barcodeBO;

    @Override
    protected WebDataService service(final SiteDataModel siteData,
                                     final SubFirmProfile subFirm,
                                     final AbstractBaseAction action,
                                     final Map<String, Object> params) throws WebOSBOException {
        /*String organId = getOrganId(siteData, subFirm);

        String prodId = XParamUtils.getString("prodId", params, StringUtils.EMPTY_STRING);

        String skus = XParamUtils.getString("skus", params, StringUtils.EMPTY_STRING);

        String skuRemove = StringUtils.EMPTY_STRING;
        for (String sku : skus.split(";")) {
            final POSBarcode barcode = barcodeBO.loadBySku(organId, StringUtils.EMPTY_STRING, sku);
            if (barcode != null) {
                barcodeBO.remove(barcode.getUuid());

                final POSItem product = productBO.loadByCode(organId, barcode.getProdCode());
                if (product != null && product.getCodeSKU().remove(sku)) {
                    productBO.update(product.getUuid(), product);
                }

                skuRemove += sku + ";";
            }
        }


        return new ObjectWebDataservice<>(skuRemove);*/

        return new ObjectWebDataservice<>("FAIL");
    }

}
