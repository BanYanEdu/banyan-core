package com.inet.calista.global.service.organization;

import com.google.common.base.Strings;
import com.inet.calista.common.utils.ErrorCode;
import com.inet.calista.global.bo.contact.OrganizationInfoBo;
import com.inet.calista.global.constant.CommonConstant;
import com.inet.calista.global.dto.OrganizationDto;
import com.inet.calista.global.exception.GlServiceException;
import com.inet.calista.global.model.contact.OrganizationInfo;
import com.inet.calista.global.service.GlAbstractService;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.XParamUtils;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import java.util.Map;

/**
 * LoadByIdService.
 *
 * @author thoangtran
 * @version LoadByIdService 2018 04-16 15:16
 */

@Slf4j
public class LoadByIdService extends GlAbstractService {
  @Inject
  private OrganizationInfoBo organizationBo;
  @Override
  protected WebDataService service(final SiteDataModel site, final SubFirmProfile firmProfile, final AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
    try{
      final String  uuid = XParamUtils.getString(CommonConstant.UUID, params);
      if(Strings.isNullOrEmpty(uuid)){
        putError(action, CommonConstant.UUID, ErrorCode.MUST_NOT_EMPTY);
        return FAILURE_RESULT;
      }
      final OrganizationDto organizationDto = new OrganizationDto();
      OrganizationInfo info = organizationBo.load(uuid);
      if(info == null) {
        putError(action, CommonConstant.UUID, ErrorCode.NOT_EXISTS);
        return FAILURE_RESULT;
      }
      organizationDto.setInfo(info);

      if(StringUtils.hasLength(info.getMemberOfId())) {
        final OrganizationInfo parentOrg = organizationBo.loadByOrganId(info.getMemberOfId(), "name", "organId");
        organizationDto.setMemberOf(parentOrg);
      }
      return new ObjectWebDataservice<>(organizationDto);
    } catch (Exception ex) {
      GlServiceException iex = new GlServiceException("Error occurs during loading organization by identify", ex);

      // log error
      log.error(iex.getMessage(), iex);
      putServiceError(action);

      throw iex;
    }
  }
}
