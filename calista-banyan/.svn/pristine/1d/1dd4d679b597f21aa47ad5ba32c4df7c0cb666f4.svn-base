/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */
package com.inet.calista.global.bo;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.inject.Named;

import org.apache.shiro.util.StringUtils;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.global.model.GlbCity;
import com.inet.calista.global.model.GlbDistrict;
import com.inet.xportal.nosql.web.bf.MagicContentBF;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.util.JSONUtil;
import com.inet.xportal.web.context.ContentContext;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.BeanInitiateInvoke;
import com.inet.xportal.web.util.ResourceUtil;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

/**
 * 
 * GlbDistrictBO.
 *
 * @author Hien Nguyen
 * @version $Id: GlbDistrictBO.java Feb 7, 2020 10:10:54 AM $
 *
 * @since 1.0
 */
@Named("GlbDistrictBO")
public class GlbDistrictBO extends GlbNoSqlBO<GlbDistrict> implements BeanInitiateInvoke 
{
	@Inject
	private GlbCityBO citiBO;
	
    /**
     * @param businessFacade
     */
    @Inject
    protected GlbDistrictBO(@ContentContext(context = CalistaConstant.DB_CONTEXT) MagicContentBF businessFacade) {
        super(businessFacade, "gl_district");
    }

    /**
	 * @return the citiBO
	 */
	public GlbCityBO getCitiBO() {
		return citiBO;
	}


	/**
     * @param cityID
     * @param codes
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<GlbDistrict> query(String cityID, List<String> codes) throws WebOSBOException
    {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
        		.field("cityID").equal(cityID)
        		.field("code").in(codes);
        return query((QueryImpl<JSONDB>) query);
    }

    /**
     * 
     * @param cityID
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<GlbDistrict> query(String cityID) throws WebOSBOException
    {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
        		.field("cityID").equal(cityID);

        return query((QueryImpl<JSONDB>) query);
    }

    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.nosql.web.bo.MagicContentBO#add(java.lang.Object)
     */
    @Override
    public String add(GlbDistrict item) throws WebOSBOException
    {
    		GlbDistrict info = loadByCode(item.getCityID(), item.getCode());
    		if (info != null)
    		{
    			if (StringUtils.hasLength(item.getLevel()))
    				info.setLevel(item.getLevel());
    			
    			info.setName(item.getName());
    			
    			super.update(info.getUuid(), info);
    			
    			return info.getUuid();
    		}
    		else
    			return super.add(item);
    }

    /**
     * 
     * @param cityID
     * @param code
     * @return
     * @throws WebOSBOException
     */
    public GlbDistrict loadByCode(String cityID, String code) throws WebOSBOException {
    		final Query<JSONDB> query = new QueryImpl<JSONDB>()
    				.field("cityID").equal(cityID)
    				.field("code").equal(code);
    		return load((QueryImpl<JSONDB>) query);
    }
    
    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.web.interfaces.BeanInitiateInvoke#init()
     */
    @Override
    public void init() 
    {
        // index data
        ensureIndex("cityID");
        ensureIndex("cityID,code");

        if (count() <= 0)
        {
	        logger.debug("init district data from global-district.json file");
	        String json = ResourceUtil.getResourceAsString("global-district.json");
	        if (StringUtils.hasLength(json)) 
	        {
	            JSONArray arrJson = ResourceUtil.getJsonAsArray(json);
	            if (arrJson.size() > 0) 
	            {
	                final Map<String, GlbCity> map = new HashMap<>();
	                for (int idx = 0; idx < arrJson.size(); idx++) 
	                {
	                    JSONObject jsonItem = (JSONObject) arrJson.get(idx);
	                    GlbDistrict item = JSONUtil.json2Bean(GlbDistrict.class, jsonItem);
	
	                    String country = StringUtils.EMPTY_STRING;
	                    if (jsonItem.has("country")) {
	                        country = jsonItem.getString("country");
	                    }
	                    String city = StringUtils.EMPTY_STRING;
	                    if (jsonItem.has("city")) {
	                        city = jsonItem.getString("city");
	                    }

	                    if (StringUtils.hasLength(country) && 
	                    	   StringUtils.hasLength(city) &&
	                    	   StringUtils.hasLength(item.getCode()) && 
	                    	   StringUtils.hasLength(item.getName())) 
	                    {
	                        String key = country + city;
	                        if (!map.containsKey(key)) 
	                        		map.put(key,citiBO.loadByCode(country, city));
	                        
	                        final GlbCity cityItem = map.get(key);
	                        if (cityItem != null) 
	                        {
	                            item.setCityID(cityItem.getUuid());
	                            add(item);                       
	                        }
	                    }
	                }
	            }
	        }
        }
    }

    /*
     * (non-Javadoc)
     *
     * @see com.inet.xportal.nosql.web.bo.MagicContentBO#getClassConvetor()
     */
    @Override
    protected Class<GlbDistrict> getClassConvetor() {
        return GlbDistrict.class;
    }
}
