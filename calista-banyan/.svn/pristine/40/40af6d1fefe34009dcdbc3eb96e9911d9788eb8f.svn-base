/*
 * ****************************************************************
 *      Copyright (c) 2019 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.bo;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.global.GlobalConstant;
import com.inet.calista.global.model.GlbEmail;
import com.inet.xportal.nosql.web.bf.MagicContentBF;
import com.inet.xportal.util.JSONUtil;
import com.inet.xportal.web.context.ContentContext;
import com.inet.xportal.web.context.WebContext;
import com.inet.xportal.web.interfaces.BeanInitiateInvoke;
import com.inet.xportal.web.util.ResourceUtil;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.impl.QueryImpl;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.apache.shiro.util.StringUtils;

import javax.inject.Inject;
import javax.inject.Named;

/**
 * com.inet.calista.global.bo.
 *
 * @author Phong Tran
 * @version : GlbEmailBO.java Jun 21, 2019 10:02 phongtt $
 * @since 1.0
 */
@Named("GlbEmailBO")
public class GlbEmailBO extends EmailAbstractBO<GlbEmail> implements BeanInitiateInvoke {

    /**
     * @param businessFacade
     */
    @Inject
    protected GlbEmailBO(@ContentContext(context = CalistaConstant.DB_CONTEXT) MagicContentBF businessFacade) {
        super(businessFacade, "gl_email_template");
    }

    @Override
    protected Class<GlbEmail> getClassConvetor() {
        return GlbEmail.class;
    }


    /*
     * (non-Javadoc)
     * @see com.inet.xportal.web.interfaces.BeanInitiateInvoke#init()
     */
    @Override
    public void init() {
        super.init();

        //init email template for application
        String application = WebContext.INSTANCE.cache().getApplication();
        logger.debug("init email template for application {}", application);

        final QueryImpl<JSONDB> query = new QueryImpl<>();
        query.field("application").equal(application);

        if (super.count(query) > 0) {
            return;
        }

        initMailApplication(application);
    }

    /**
     * @param application
     */
    public void initMailApplication(String application) {
        String fileEmailTemplate = String.format("%s-email-template.json", application);

        try {
            String json = ResourceUtil.getResourceAsString(fileEmailTemplate);
            if (StringUtils.hasLength(json)) {
                JSONArray arrJson = ResourceUtil.getJsonAsArray(json);
                if (arrJson.size() > 0) {
                    for (int idx = 0; idx < arrJson.size(); idx++) {
                        GlbEmail item = JSONUtil.json2Bean(GlbEmail.class,
                                (JSONObject) arrJson.get(idx));

                        item.setApplication(application);
                        item.setOrganId(GlobalConstant.CLOUD_MNGM);
                        item.setLanguage("vi");

                        if (verifyTemplate(item)) {
                            try {
                                item.setUuid(add(item));
                                logger.debug("add email template {} success.", JSONObject.fromObject(item));
                            } catch (Exception e) {
                                logger.error("init email template  {} - {} fail.", item.getEmailCode(), item.getEmailName());
                            }
                        }
                    }
                }
            }
        } catch (Exception ex) {
            logger.error("init email application {} fail!", application);
        }
    }
}
