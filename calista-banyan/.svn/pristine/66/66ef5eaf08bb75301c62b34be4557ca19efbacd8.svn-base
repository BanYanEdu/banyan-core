/*
 * ****************************************************************
 *      Copyright (c) 2018 by Phongtt (phongtt@inetcloud.vn)
 *
 *      Licensed under the iNet Solutions Corp.,
 *      You may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.inetcloud.vn/licenses
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 * ****************************************************************
 */

package com.inet.calista.global.bo;

import javax.inject.Inject;
import javax.inject.Named;

import com.inet.calista.common.CalistaConstant;
import com.inet.calista.global.model.GlobalRegion;
import com.inet.xportal.nosql.web.bf.MagicContentBF;
import com.inet.xportal.nosql.web.data.SearchDTO;
import com.inet.xportal.web.context.ContentContext;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.BeanInitiateInvoke;
import com.inet.xportal.xdb.persistence.JSONDB;
import com.inet.xportal.xdb.query.Query;
import com.inet.xportal.xdb.query.impl.QueryImpl;

/**
 * 
 * GlobalRegionBO.
 *
 * @author Hien Nguyen
 * @version $Id: GlobalRegionBO.java May 20, 2019 12:02:25 PM $
 *
 * @since 1.0
 */
@Named("GlobalRegionBO")
public class GlobalRegionBO extends GLNoSqlBo<GlobalRegion> implements BeanInitiateInvoke {
	/*
	 * 
	 */
    @Inject
    protected GlobalRegionBO(@ContentContext(context = CalistaConstant.DB_CONTEXT) MagicContentBF businessFacade) {
        super(businessFacade, "gl_region");
    }

    /*
     * (non-Javadoc)
     * @see com.inet.xportal.nosql.web.bo.MagicContentBO#add(java.lang.Object)
     */
    @Override
    public String add(GlobalRegion item) throws WebOSBOException {
    		GlobalRegion info = loadByCode(item.getCountryID(), item.getCode());
    		if (info != null)
    			return info.getUuid();
        return super.add(item);
    }

    /**
     * 
     * @param countryID
     * @return
     * @throws WebOSBOException
     */
    public GlobalRegion loadByCode(String countryID, String code) throws WebOSBOException 
    {
        final Query<JSONDB> query = new QueryImpl<JSONDB>()
        		.field("countryID").equal(countryID)
        		.field("code").equal(code);
        return load((QueryImpl<JSONDB>) query);
    }
    
    /**
     * @param countryID
     * @return
     * @throws WebOSBOException
     */
    public SearchDTO<GlobalRegion> queryByCountryID(String countryID) throws WebOSBOException 
    {
        final Query<JSONDB> query = new QueryImpl<JSONDB>().field("countryID").equal(countryID);
        return query((QueryImpl<JSONDB>) query);
    }
    
    /*
     * (non-Javadoc)
     * @see com.inet.xportal.nosql.web.bo.SQLMagicBase#getClassConvetor()
     */
    @Override
    protected Class<GlobalRegion> getClassConvetor() {
        return GlobalRegion.class;
    }

    /*
     * (non-Javadoc)
     * @see com.inet.xportal.web.interfaces.BeanInitiateInvoke#init()
     */
    @Override
    public void init() {
    		ensureIndex("countryID");
    		ensureIndex("countryID,code");
    }
}
