package com.inet.calista.crm.service.setting.group;

import com.inet.calista.crm.bo.setting.GroupBo;
import com.inet.calista.crm.model.setting.internal.Group;
import com.inet.calista.crm.model.setting.internal.LinkTo;
import com.inet.calista.crm.service.CRMAbstractService;
import com.inet.calista.crm.service.constant.Roles;
import com.inet.calista.crm.service.exception.CRMBusinessException;
import com.inet.calista.crm.util.CommonUtils;
import com.inet.calista.crm.util.DateUtils;
import com.inet.calista.crm.util.JsonUtils;
import com.inet.xportal.nosql.web.model.SiteDataModel;
import com.inet.xportal.nosql.web.model.SubFirmProfile;
import com.inet.xportal.web.WebConstant;
import com.inet.xportal.web.action.AbstractBaseAction;
import com.inet.xportal.web.annotation.XPortalDataService;
import com.inet.xportal.web.annotation.XPortalPageRequest;
import com.inet.xportal.web.exception.WebOSBOException;
import com.inet.xportal.web.interfaces.ObjectWebDataservice;
import com.inet.xportal.web.interfaces.WebDataService;
import com.inet.xportal.web.util.SecurityUtil;
import com.inet.xportal.web.util.XParamUtils;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.util.StringUtils;
import org.json.JSONArray;
import org.json.JSONException;

import javax.inject.Inject;
import javax.inject.Named;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 * AbSaveService.
 *
 * @author thoangtran
 * @version AbSaveService 2018 04-12 09:16
 */
@Named("crm_setting_group_saveservice")
@XPortalDataService(roles = { Roles.SETTING_GROUP}, description = "Manage group")
@XPortalPageRequest(uri = "crm/setting/group/save", transaction = true, inherit = true,  result = WebConstant.ACTION_XSTREAM_JSON_RESULT)
@Slf4j
public class SaveService extends CRMAbstractService {
  @Inject
  private GroupBo groupBo;
  @Override
  protected WebDataService service(final SiteDataModel site,final  SubFirmProfile firm,final  AbstractBaseAction action, final Map<String, Object> params) throws WebOSBOException {
    try{
      final Group group = action.getModel(Group.class);
      group.setOrgCode(firm.getOrganiId());
      group.setCreatedBy(SecurityUtil.getPrincipal());
      group.setCreatedDate(DateUtils.now().getTime());
      group.setUuid(StringUtils.EMPTY_STRING);
      group.setMembers(getMembers(params));
      groupBo.save(group);
      return new ObjectWebDataservice<>(group);
    } catch (Exception ex) {
      CRMBusinessException iex = new CRMBusinessException("Error occurs during saving group information", ex);
      // log error
      log.error(iex.getMessage(), iex);
      putServiceError(action);

      throw iex;
    }
  }

  public static Set<LinkTo> getMembers(final Map<String, Object> params) throws JSONException {
    final  Set<LinkTo> linkTos  = new HashSet<>();
    final JSONArray members = JsonUtils.toJsonArray(XParamUtils.getString("membersStr", params));
    if(CommonUtils.isNotNull(members)){
      for(int index = 0 ; index < members.length(); index ++) {
        linkTos.add(LinkTo.transform( members.getJSONObject(index)));
      }
    }
    return linkTos;
  }
}
